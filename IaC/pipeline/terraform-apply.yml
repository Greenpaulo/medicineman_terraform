trigger:
  branches:
    include:
      - none

variables:
  - group: pipeline-variables

parameters:
  - name: action
    displayName: terraform action
    type: string
    default: plan
    values:
      - plan
      - plan-and-apply

pool:
  vmImage: Ubuntu-20.04

stages:
  - stage: plan

    jobs:
      - job: tfenv_install
        steps:
          - task: 6d15af64-176c-496d-b583-fd2ae21d4df4@1
            condition: false
            inputs:
              repository: none
          - task: Bash@3
            displayName: 'tfenv_install'
            inputs:
              targetType: inline
              script: |
                brew install tfenv
                # tfenv install latest && tfenv use latest
                GREP_OPTIONS="--color=never" tfenv install 0.14.5
                tfenv use 0.14.5
      - job: terraform_init_and_plan
        dependsOn:
          - tfenv_install
        steps:
          - task: 6d15af64-176c-496d-b583-fd2ae21d4df4@1
            inputs:
              repository: self
          - task: Bash@3
            displayName: 'tfinit_plan'
            inputs:
              targetType: inline
              script: |
                az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
                terraform init
                pwd
                terraform plan -out=$TERRAFORM_PLAN_OUTPUT
              failOnStderr: true
              workingDirectory: $(System.DefaultWorkingDirectory)
          - task: ecdc45f6-832d-4ad9-b52b-ee49e94659be@1
            inputs:
              path: $(System.DefaultWorkingDirectory)
              artifactName: terraform_repo

  - stage: apply
    condition: and(succeeded(), eq('plan', 'plan-and-apply'))
    jobs:
      - job: ''
        steps:
          - task: 30f35852-3f7e-4c0c-9a88-e127b4f97211@1
            inputs:
              alias: current
              artifact: terraform_repo
          - task: Bash@3
            displayName: 'tfapply'
            inputs:
              targetType: inline
              script: |
                az login --service-principal -u $(ARM_CLIENT_ID) -p $(ARM_CLIENT_SECRET) --tenant $(ARM_TENANT_ID)
                terraform init
                terraform apply -auto-approve $TERRAFORM_PLAN_OUTPUT
              failOnStderr: true
              workingDirectory: $(System.DefaultWorkingDirectory)
